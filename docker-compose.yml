version: "3.8"  # Specify Docker Compose version

volumes:
  nexus-data: {}  # Define empty volume for Nexus data
  jenkins-data: {}  # Define empty volume for Jenkins data
  postgresql-data: {}  # Define empty volume for SonarQube data

services:
  jenkins:
    container_name: jenkins
    hostname: jenkins
    image: jenkins/jenkins:latest  # Use latest Jenkins image
    ports:
      - "8080:8080"  # Map container port 8080 to host port 8080 (Jenkins UI)
      - "50000:50000"
    volumes:
      - jenkins-data:/var/jenkins_home  # Persistent storage for Jenkins data
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - ./daemon.json:/etc/docker/daemon.json
    environment:
      - JENKINS_HOME=/var/jenkins_home
    # restart: unless-stopped  # Restart Jenkins container unless manually stopped

  sonarqube:
    container_name: sonarqube
    hostname: sonarqube
    image: sonarqube:community
    depends_on:
      - db
    ports:
      - "9000:9000"
    volumes:
      - ./sonarqube/data:/opt/sonarqube/data
      - ./sonarqube/extensions:/opt/sonarqube/extensions
      - ./sonarqube/logs:/opt/sonarqube/logs
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar

  db:
    container_name: db
    hostname: db
    image: postgres:12
    ports:
      - "5430:5432"
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  nexus:
    container_name: nexus
    hostname: nexus
    image: sonatype/nexus3:latest  # Use latest Nexus image
    ports:
      - "8081:8081"  # Map container port 8081 to host port 8081 (Nexus UI)
    volumes:
      - ./nexus-data:/var/sonatype-work/nexus3  # Persistent storage for Nexus data
    environment:
      - SONATYPE_NE=nexus  # Set initial admin password (change for production)
    # restart: unless-stopped